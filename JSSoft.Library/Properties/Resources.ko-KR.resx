<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Exception_AlreadyRegisteredProperty_Format" xml:space="preserve">
    <value>'{0}' 속성은 이미 등록되어 있습니다.</value>
  </data>
  <data name="Exception_NotFoundProperty_Format" xml:space="preserve">
    <value>'{0}' 속성은 존재하지 않습니다.</value>
  </data>
  <data name="Exception_InvalidPropertyType_Format" xml:space="preserve">
    <value>'{0}' 속성은 사용할 수 없습니다.</value>
  </data>
  <data name="Exception_UndefinedValue_Format" xml:space="preserve">
    <value>'{0}' 값은 정의되어 있지 않습니다.</value>
  </data>
  <data name="Exception_NotFoundDirectory_Format" xml:space="preserve">
    <value>'{0}' 경로를 찾을 수 없습니다.</value>
  </data>
  <data name="Exception_NotIncludedParentPath" xml:space="preserve">
    <value>파일 경로에 부모 경로가 포함되어 있지 않습니다.</value>
  </data>
  <data name="Exception_InvalidPath" xml:space="preserve">
    <value>잘못된 경로입니다.</value>
  </data>
  <data name="Exception_InvalidPath_Format" xml:space="preserve">
    <value>'{0}' 은(는) 잘못된 경로입니다.</value>
  </data>
  <data name="Exception_CyclicDependency" xml:space="preserve">
    <value>주기적 종속성을 발견했습니다.</value>
  </data>
  <data name="Exception_NotSupportedType_Format" xml:space="preserve">
    <value>'{0}' 타입은 지원되지 않습니다.</value>
  </data>
  <data name="Exception_Between0and1" xml:space="preserve">
    <value>0 과 1사이의 값을 사용해야 합니다.</value>
  </data>
  <data name="Exception_InvalidName" xml:space="preserve">
    <value>이름에 특수문자 \ / : * ? " &lt; &gt; | 등은 포함될 수 없습니다.</value>
  </data>
  <data name="Exception_AlreadyExistedItem_Format" xml:space="preserve">
    <value>'{0}' 항목은 이미 존재합니다.</value>
  </data>
  <data name="Exception_SameItemInParent" xml:space="preserve">
    <value>부모 폴더에 이름이 같은 항목이 존재합니다.</value>
  </data>
  <data name="Exception_SameFolderInParent" xml:space="preserve">
    <value>부모 폴더에 이름이 같은 폴더가 존재합니다.</value>
  </data>
  <data name="Exception_NotFoundFolder_Format" xml:space="preserve">
    <value>'{0}' 폴더를 찾을 수 없습니다.</value>
  </data>
  <data name="Exception_IndestructibleObject" xml:space="preserve">
    <value>삭제할 수 없습니다.</value>
  </data>
  <data name="Message_Completed" xml:space="preserve">
    <value>완료되었습니다.</value>
  </data>
  <data name="Exception_EmptyStringCannotBeUsedAsName" xml:space="preserve">
    <value>빈 문자열을 이름으로 사용할 수 없습니다.</value>
  </data>
  <data name="Exception_NotFoundItem_Format" xml:space="preserve">
    <value>'{0}' 항목을 찾을 수 없습니다.</value>
  </data>
  <data name="Exception_UniqueObjectCannotRename" xml:space="preserve">
    <value>고유 이름 속성이 설정된 객체는 이름을 변경할 수 없습니다.</value>
  </data>
  <data name="Exception_InvalidName_Format" xml:space="preserve">
    <value>'{0}' 은(는) 잘못된 이름입니다.</value>
  </data>
  <data name="Exception_ChildFolderCannotBeSetAsParent" xml:space="preserve">
    <value>폴더의 하위 폴더는 부모로 설정할 수 없습니다.</value>
  </data>
  <data name="Exception_UnnamedFolderCannotHaveParent" xml:space="preserve">
    <value>이름이 없는 폴더는 부모 폴더를 설정할 수 없습니다.</value>
  </data>
  <data name="Exception_CannotBeSetItSelfAsParent" xml:space="preserve">
    <value>자기 자신을 부모 폴더로 설정할 수 없습니다.</value>
  </data>
</root>